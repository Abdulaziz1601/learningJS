{"version":3,"sources":["webpack:///./dist/js/modules/calc.js","webpack:///./dist/js/modules/cards.js","webpack:///./dist/js/modules/forms.js","webpack:///./dist/js/modules/modal.js","webpack:///./dist/js/modules/slider.js","webpack:///./dist/js/modules/tabs.js","webpack:///./dist/js/modules/timer.js","webpack:///./dist/js/services/services.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./dist/js/script.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,a;AACA;AACA;AACA,a;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oFAAoF;AACpF,aAAa;AACb;AACA,yEAAyE;AACzE;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,a;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,iEAAgB,IAAI,EAAC,4C;;;;;;;;;;;;;;;AC9G4B;AACjD;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,2BAA2B,SAAS,OAAO,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;;AAEA,IAAI,+DAAW;AACf;AACA,2BAA2B,iCAAiC,MAAM,wFAAwF,iCAAiC;AAC3L,4FAA4F,8CAA8C;AAC1I,aAAa;AACb,SAAS;AACT;;AAEA,iEAAgB,KAAK,EAAC;;;;;;;;;;;;;;;;;ACpDwB;AACA;AAC9C;AACA;;AAEA,2DAA2D;;AAE3D;AACA;AACA;AACA;AACA;;AAEA;AACA,2B;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,cAAc;AACd;;AAEA,gDAAgD;AAChD;AAC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ACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,IAAI;AAC5B,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK,E;;;;;;;;;;;;;;;ACnDpB,uCAAuC;AACvC,kCAAkC;AAClC;AACA,iB;AACA;AACA,SAAS;AACT;AACA,KAAK,G;AACL;AACA,4BAA4B;AAC5B;;AAEA,iCAAiC;AACjC,+BAA+B;AAC/B;AACA;;AAEA;AACA,2CAA2C,IAAI,YAAY,WAAW,GAAG;AACzE;;AAEA,4BAA4B;AAC5B;;AAEkB;;;;;;;UCxBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACA;AACF;AACE;AACE;AACI;AAC1C;;AAEA;;AAEA,2CAA2C,yDAAS;;AAEpD,IAAI,sDAAI;AACR,IAAI,uDAAK,yC;AACT,IAAI,uDAAK,yB;AACT,IAAI,uDAAK,G;AACT,IAAI,sDAAI,G;AACR,IAAI,uDAAK,uB;AACT,IAAI,wDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,E;AACL,CAAC,E","file":"bundle.js","sourcesContent":["function calc() {\r\n     // Calc\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    //We'll check those values from locaSt, if they are in localSt we initialize them to variables\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }  \r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }  \r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '0';\r\n            return;\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round(( 88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n            if (e.target.getAttribute('data-ratio')) {\r\n                ratio = +e.target.getAttribute('data-ratio');\r\n                localStorage.setItem('ratio', +e.target.getAttribute('data-ratio')); //localStorace remembers what ratio, even after refreshing the page\r\n            } else {\r\n                sex = e.target.getAttribute('id');\r\n                localStorage.setItem('sex', e.target.getAttribute('id'));//localSt remembers sex of person\r\n            }\r\n\r\n            elements.forEach(elem => {\r\n                elem.classList.remove(activeClass);\r\n            });\r\n            e.target.classList.add(activeClass);\r\n            calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            } \r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nexport default  calc; // changed commonJS to es6 module structure","import {getResource} from '../services/services';\r\nfunction cards() {\r\n    // Using Classes for cards \r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) { //We do not know how many classes we'll add to style\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.transfer = 1; //We can change it, example if mney is in USD\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.changeToUAH();\r\n        }\r\n        \r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n            \r\n            if (this.classes.length === 0) {\r\n                this.classes = 'menu__item';\r\n                element.classList.add(this.classes);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = ` \r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n  \r\n    getResource(\"http://localhost:3000/menu\")\r\n        .then(data => {\r\n            data.forEach(({img, altimg, title, descr, price}) => { // item = element in array of objs was obj itself so we used object destructuring EX: {img, altimg, title, descr, price} = arrElem;\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render(); //new MenuCard(obj.img, obj.altImg).render(); we could write like this, but it is not effcnt so we use object destructuring\r\n            });\r\n        });\r\n}\r\n\r\nexport default  cards; // changed commonJS to es6 module structure\r\n","import {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services';\r\nfunction forms(formSelector, modalTimerId) {\r\n    //Forms  \r\n\r\n    const forms =  document.querySelectorAll(formSelector); //We are getting all forms\r\n\r\n    const message = {\r\n        loading: 'img/forms/spinner.svg',\r\n        success: 'Thank you! We will contact you soon!',\r\n        failure: 'Something went wrong...'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item); \r\n    });\r\n\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading; // We could set src with setAttribute\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;// Adding styled classes like .show is the best way\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n             \r\n            const formData = new FormData(form); // looks like JSON but It is object FormData\r\n            //Most important thing is:\r\n            //There has to be attribute name, js can't find form, so you've to check it\r\n\r\n            //!!If we need to send data as json file, we need headers!!\r\n            // request.setRequestHeader('Content-type', 'multipart/form-data'); //json\r\n            // FormData object is specific object, so we cannot just turn it to JSON, as simple objects //json\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n            // starting debug from deepest bracket: turned formdata to arr -> turned arr to classic (simple) obj -> turned obj to JSON.\r\n\r\n\r\n            // fetch('server.php', {\r\n            //     method: \"POST\",\r\n            //     headers:{ \r\n            //         \"Content-type\": \"multipart/form-data\"\r\n            //     },\r\n            //     body: JSON.stringify(object) //Converts an object to JSON //json //JSON object is sent not formData\r\n            // })\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n                console.log(data);  \r\n                showThanksModal(message.success);\r\n                statusMessage.remove();\r\n            })\r\n            .catch(() => {\r\n                showThanksModal(message.failure);\r\n            })\r\n            .finally(() => {\r\n                form.reset(); //Deletes text after sending it to server or We can clear their values incrementally, It is same \r\n            });\r\n        });\r\n    }\r\n    // Styling ater post of message, with JS\r\n    // We wanna took just wraper (.modal__dialog) of the previous modal, and just replace it with \r\n    // texts such as succesc fail or etc\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n        //We are hiding this element, before showing modal \r\n        prevModalDialog.classList.add('hide');// content is hidden, not deleted - in case user wants to access IT\r\n        openModal('.modal', modalTimerId); //opens modal\r\n\r\n        // Creating new THANKS content\r\n        const thanksModal = document.createElement('div');// Wrapper is created inside main .modal class\r\n        thanksModal.classList.add('modal__dialog'); //Remember, previous .modal__dialog class is hidden\r\n        // and we are creating another new  .modal__dialog class inside main modal class\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    }\r\n\r\n    fetch('http://localhost:3000/menu')\r\n        .then(data => data.json())\r\n        .then(res => console.log(res));\r\n\r\n}\r\n\r\nexport default forms;","//DRY don't repeat yourself, code was written 2, so copied, because of this we created fucntion\r\nfunction openModal(modalSelector, modalTimerID) {\r\n    const modal = document.querySelector(modalSelector);//  '.modal'\r\n\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    console.log(modalTimerID);\r\n    if (modalTimerID) {\r\n        clearInterval(modalTimerID); //Deletes an interval if user is already opened a modal\r\n    }   \r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);//  '.modal'\r\n\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = ''; //browser automatically knows what to do\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerID) { //Adding args, to make our module reusable: to use open and close Modal funcs\r\n    // Modal\r\n// All variables are taken\r\n    const modalTrigger = document.querySelectorAll(triggerSelector), // [data-modal]'\r\n          modal = document.querySelector(modalSelector);//  '.modal'\r\n\r\n\r\n    modalTrigger.forEach( btn =>\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerID)) // if we write like these: openModal(modalSelector), it will call after func immideatly after adding ev.listener so we have to wrap func like this: () => openModal(modalSelector), then func will be called when user will \"click\" on btn \r\n    );\r\n    \r\n    modal.addEventListener('click', (e) => {\r\n        if(e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            closeModal(modalSelector, modalTimerID);    \r\n        }\r\n    });\r\n\r\n    // Event when key (esc) is pressed, modal is closed\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code == 'Escape' && modal.classList.contains('show')){ //If modal is open\r\n            closeModal(modalSelector, modalTimerID);\r\n        }\r\n    });\r\n    // With toggle function\r\n    // modalTrigger.forEach((item) => { // adding events to all triggers to open modal\r\n    //     item.addEventListener('click', () => {\r\n    //         modal.classList.toggle('show');\r\n    //         document.body.style.overflow = 'hidden';\r\n    //     });\r\n    // });\r\n    \r\n    // modalCloseBtn.addEventListener('click', () => { // adding events to all triggers to close modal\r\n    //     modal.classList.toggle('show');\r\n    //     document.body.style.overflow = ''; //browser automatically knows what to do\r\n    // });\r\n\r\n    // Task is when user scrolls till some point modal pops up\r\n\r\n\r\n    //If user scrolls till end, then modal appears\r\n\r\n    function showModalByScroll() {\r\n        // user-scrolled-part      height-that-is-visible-to-client        whole-height-of-doc\r\n        if(window.pageYOffset + document.documentElement.clientHeight >= document.\r\n        documentElement.scrollHeight) {\r\n            openModal(modalSelector, modalTimerID);\r\n            window.removeEventListener('scroll', showModalByScroll); // after event is used it is removed but modal is still shown only event is removed\r\n        }\r\n    }\r\n    window.addEventListener('scroll', showModalByScroll); // We cannot put here , {once: true} as 3RD arg because we added event to window so scroll changes in window\r\n    // much time so when usemodalSelectorr starts scrolling and ends it event is triggered once and deleted\r\n\r\n}\r\n\r\nexport default modal;\r\nexport {closeModal}; //Exported funcs, to use them in another script\r\nexport {openModal};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n   \r\n    let slideIndex = 1; //Index to manipulate slides\r\n    let offset = 0; // offset to move slides\r\n\r\n    const slides = document.querySelectorAll(slide),\r\n          slider = document.querySelector(container),\r\n          prev = document.querySelector(prevArrow),\r\n          next = document.querySelector(nextArrow),\r\n          total = document.querySelector(totalCounter),\r\n          current = document.querySelector(currentCounter),\r\n          slidesWrapper = document.querySelector(wrapper), // parent of a window \r\n          slidesField = document.querySelector(field), // window to show slides\r\n          width = window.getComputedStyle(slidesWrapper).width; // width of the parentWindow\r\n\r\n    if (slides.length < 10) { // If length of slide is less than 10, then we add 0\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length; // If length of slide is more than 10, then we donot add 0\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%'; //In our case it is 400%\r\n    slidesField.style.display = 'flex'; // display:flex helps us to make elements in a row\r\n    slidesField.style.transition = '.5s all'; //smooth transition\r\n\r\n    slidesWrapper.style.overflow = 'hidden'; // we hide another slides, and move slidesFiel\r\n    \r\n\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width; //We give the same width for all images to make them same\r\n    });\r\n\r\n    slider.style.position = 'relative'; // relatively to slider we move dots\r\n\r\n    const indicators = document.createElement('ol'),\r\n          dots = []; // arr to save all dots here and manipulate them\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n\r\n    indicators.style.cssText = `\r\n        position: absolute; \r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n\r\n    slider.append(indicators); //appending dots to slider container\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li'); // Creating li elements: ol > li\r\n        dot.setAttribute('data-slide-to', i + 1); // setting attributes to use them in event delegation\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n\r\n        if (i == 0) {\r\n            dot.style.opacity = 1; //highlighting first dot \r\n        }\r\n\r\n        indicators.append(dot); // appending  li dots in indicators - ol parent\r\n        dots.push(dot); // pushing li dots to dots[] arr\r\n    }\r\n\r\n    const onlyNum = (str) => +str.replace(/\\D/g, ''); //Return only number part of str\r\n    \r\n    next.addEventListener('click', () => {\r\n        // offset = 650 * 3 == 1950, when offset is at the end, we change it to first slide\r\n        if (offset == onlyNum(width) * (slides.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += onlyNum(width); // when next is clicked offset grows\r\n        } // so it will move to left to -X, by making slides to pass next after another\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) { // whenever index is at the end, it returns to first slide \r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        //indicators\r\n        dots.forEach(dot => dot.style.opacity = '.5'); //all dots are unhighlightened\r\n\r\n        dots[slideIndex - 1].style.opacity = 1; // after next is pressed next dot is highlightened\r\n\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) { // when offset is at 0 - before 1St slide ->\r\n            offset = onlyNum(width) * (slides.length - 1); // it will move to the last slide\r\n        } else {\r\n            offset -= onlyNum(width); // offset decreases so \r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`; // field is moved to right, \r\n        // which imitates elements moving left\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        //indicators\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            // getting target number from 'data-slide-to'\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n            slideIndex = slideTo; // slideTo givex index num to move slide\r\n            offset = onlyNum(width) * (slideTo - 1); \r\n            // offsetting slide by multiplying width of one slide to the number of slide we are headed\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n\r\n            dots.forEach(dot => dot.style.opacity = '.5');\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n        });\r\n    });\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n     // Tabs \r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n          tabsContent = document.querySelectorAll(tabsContentSelector),\r\n          tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    function hideTabContent() {\r\n\r\n        tabsContent.forEach(item => {\r\n            // item.style.display = 'none';\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(tab => {\r\n            tab.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) { //Default Argument, if we do not have params i is 0\r\n        // tabsContent[i].style.display = 'block'; //inline styles are not popular\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener(\"click\", (event) => {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) { //If tab item found\r\n            tabs.forEach((item, i) => { // loop through and find if clicked elem is the same as\r\n                if (item == target) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n} \r\n\r\n// Using ES6 syntax\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n    function getTimeRemaining(endtime) {\r\n         const t = Date.parse(endtime) - Date.parse(new Date()),\r\n               days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n               hours = Math.floor((t / (1000 * 60 * 60) % 24)),\r\n               minutes = Math.floor((t / (1000 * 60)) % 60),\r\n               seconds = Math.floor( (t / 1000) % 60);\r\n \r\n         return {\r\n             'total': t,\r\n             'days': days,\r\n             'hours': hours,\r\n             'minutes': minutes,\r\n             'seconds': seconds\r\n         };\r\n     }\r\n \r\n     function getZero(num) {\r\n         if (num >= 0 && num < 10) {\r\n             return `0${num}`;\r\n         } else {\r\n             return num;\r\n         }\r\n     }\r\n \r\n     function setClock(selector, endtime) {\r\n         const timer =  document.querySelector(selector),\r\n               days = timer.querySelector('#days'),\r\n               hours = timer.querySelector('#hours'),\r\n               minutes = timer.querySelector('#minutes'),\r\n               seconds = timer.querySelector('#seconds'),\r\n               timeInterval = setInterval(updateClock,1000);\r\n \r\n         updateClock();\r\n \r\n         function updateClock() {\r\n             const t = getTimeRemaining(endtime);\r\n \r\n             days.innerHTML = getZero(t.days);\r\n             hours.innerHTML = getZero(t.hours);\r\n             minutes.innerHTML = getZero(t.minutes);\r\n             seconds.innerHTML = getZero(t.seconds);\r\n \r\n             if (t.total <= 0) {\r\n                 clearInterval(timeInterval);\r\n             }\r\n         }\r\n     }\r\n     setClock(id, deadline);\r\n}\r\n\r\nexport default timer;","const postData = async (url, data) => { //Means that here will be some asinchronous code. async cannot be used without await and vice versa\r\n    const res = await fetch(url, { //Here fetch will return some promise but will not complete, so we use await\r\n        method: \"POST\",\r\n        headers:{ \r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: data\r\n    } ); \r\n    // We dont know how much time, It will proccess the json data, so here we will use await to make code asynchronous (by standart it will wait 30 sec)\r\n    return await res.json(); //res.json  will give error, so we have to change this func to synchronous code\r\n};\r\n  \r\nasync function getResource(url) { //Means that here will be some aschronous code. async cannot be used without await and vice versa\r\n    let res = await fetch(url); //Here we only get data not post\r\n    // The Problem is fetch won't stop if some error happens, fetch'll stop only when no connection or some critic errors\r\n    // So, in this case we have to deal with that ourselves, with  ok and status props\r\n\r\n    if(!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`); //Throws (Shows) an Error if smth happens\r\n    }\r\n\r\n    return await res.json();// Will return simple object why ???\r\n}\r\n\r\nexport {postData};\r\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs'; //We changed commonJS syntax to es6 module struct\r\nimport modal from './modules/modal'; //import stmnts must be at top\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport calc from './modules/calc';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport {openModal} from './modules/modal';\r\n// We imported all function, so we have to call them\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const modalTimerID = setTimeout( () => openModal('.modal', modalTimerID), 50000);\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', modalTimerID); \r\n    timer('.timer', '2021-05-25'); \r\n    cards(); \r\n    calc(); \r\n    forms('form', modalTimerID); \r\n    slider({\r\n        container: '.offer__slider',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        slide: '.offer__slide',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    }); \r\n}); \r\n"],"sourceRoot":""}